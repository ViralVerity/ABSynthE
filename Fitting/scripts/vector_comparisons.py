import branch_length_parameters as BL
import topology_set as TOP
import LTT_metrics as LTT


import json

import numpy as np


def normalise(vector):
    norm=np.linalg.norm(vector, ord=1)
    return vector/norm

def get_observed_SS():
    
    obs_tips = 214
    
    observed_dist = XX
    observed_ch = XX

    #Branch lengths#
    obs_max_H = 0.3859675963699254
    obs_min_H = 0.11747444568536669

    obs_mean_lengths = 0.035080050967117304
    obs_median_lengths = 0.021939933283573243
    obs_var_lengths = 0.0013770629364285776

    obs_mean_external = 0.051805151396388485
    obs_median_external = 0.04441308703686353
    obs_var_external = 0.001384042360694057

    obs_mean_internal = 0.018197166571532235
    obs_median_internal = 0.0072969106972364806
    obs_var_internal = 0.0008026179459713262

    obs_mean_ratio = 0.35126171975246506
    obs_median_ratio = 0.16429640865044878
    obs_var_ratio = 0.5799085120262046

    #Topology set#

    obs_colless = 4528
    obs_sackin = 2990
    obs_WD_ratio = 0.75
    obs_delta_W = 12
    obs_max_ladder = 0.014018691588785047
    obs_IL_nodes = 0.4507042253521127
    obs_staircase_1 = 0.704225352112676
    obs_staircase_2 = 0.47071554226646184

    #LTT set#

    max_L = 95
    t_max_L = 0.16645019089776691
    slope_1 = 558.7257034575601
    slope_2 = 423.6566107364787
    slope_ratio = 1.318817384877529
    mean_s_time = 0.0012605312238711675
    mean_b_time = 0.0016789798767443802

#might not use these, not sure yet
    obs_LTT_points_pre = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 49, 50, 51, 52, 53, 54, 55, 56, 57, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 71, 72, 73, 74, 75, 76, 77, 78, 76, 77, 78, 79, 80, 81, 82, 83, 76, 77, 78, 79, 80, 81, 78, 79, 80, 81, 80, 81, 82, 83, 84, 81, 82, 83, 84, 85, 86, 87, 88, 89, 88, 89, 90, 91, 92, 90, 91, 92, 93, 92, 93, 94, 95, 91, 92, 93, 94, 95, 94, 95, 88, 89, 90, 91, 92, 72, 73, 67, 68, 63, 64, 65, 66, 58, 59, 56, 57, 58, 56, 55, 56, 57, 53, 52, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 63, 62, 61, 62, 63, 64, 63, 64, 65, 63, 64, 65, 63, 62, 63, 55, 56, 53, 54, 55, 53, 54, 47, 45, 46, 44, 45, 46, 47, 43, 39, 40, 41, 38, 39, 36, 37, 36, 37, 38, 39, 40, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 48, 49, 50, 47, 48, 49, 50, 48, 49, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 52, 53, 54, 51, 52, 51, 52, 49, 45, 40, 36, 34, 32, 30, 29, 28, 29, 26, 25, 23, 20, 13, 10, 7, 5, 2]
    
    LTT_bins = [(0.0, 0.05676089805192319), (0.05676089805192319, 0.05987169207556686), (0.05987169207556686, 0.06425522864214739), (0.06425522864214739, 0.06581239649891701), (0.06581239649891701, 0.07789203046309079), (0.07789203046309079, 0.08299101009946286), (0.08299101009946286, 0.08500091823284261), (0.08500091823284261, 0.08764229042527139), (0.08764229042527139, 0.08980978558293451), (0.08980978558293451, 0.09194442837581973), (0.09194442837581973, 0.0934101900894464), (0.0934101900894464, 0.09426347395244727), (0.09426347395244727, 0.09816097584063166), (0.09816097584063166, 0.09828553029949405), (0.09828553029949405, 0.1001974413433393), (0.1001974413433393, 0.10358054495640334), (0.10358054495640334, 0.10424827925561275), (0.10424827925561275, 0.10470884608166253), (0.10470884608166253, 0.10679838503007377), (0.10679838503007377, 0.10786078463086701), (0.10786078463086701, 0.11265901577166604), (0.11265901577166604, 0.11370367380792534), (0.11370367380792534, 0.11372314397199013), (0.11372314397199013, 0.1144096780700683), (0.1144096780700683, 0.11458207332484527), (0.11458207332484527, 0.11484920051917924), (0.11484920051917924, 0.11502671783165286), (0.11502671783165286, 0.11521583516700629), (0.11521583516700629, 0.11552806478295552), (0.11552806478295552, 0.11554450248290049), (0.11554450248290049, 0.11555596185646988), (0.11555596185646988, 0.1156618954983406), (0.1156618954983406, 0.11612220069679147), (0.11612220069679147, 0.11642534944956706), (0.11642534944956706, 0.11646324154287924), (0.11646324154287924, 0.1166581590378204), (0.1166581590378204, 0.11692388386646568), (0.11692388386646568, 0.11716671315097948), (0.11716671315097948, 0.11747444568536669), (0.11747444568536669, 0.11785798435893402), (0.11785798435893402, 0.11790093381070244), (0.11790093381070244, 0.11812863851375255), (0.11812863851375255, 0.1182912037119992), (0.1182912037119992, 0.11830815508712367), (0.11830815508712367, 0.11879846392761362), (0.11879846392761362, 0.11913212814125917), (0.11913212814125917, 0.1191521714778947), (0.1191521714778947, 0.11924058022220052), (0.11924058022220052, 0.11925648676550216), (0.11925648676550216, 0.11967870475960263), (0.11967870475960263, 0.11996585681156602), (0.11996585681156602, 0.11997111128909244), (0.11997111128909244, 0.12021417171272297), (0.12021417171272297, 0.12022064184631898), (0.12022064184631898, 0.12032849015941927), (0.12032849015941927, 0.12037606586397209), (0.12037606586397209, 0.1215630164237036), (0.1215630164237036, 0.12204492092637076), (0.12204492092637076, 0.12213867504524778), (0.12213867504524778, 0.12286572422471553), (0.12286572422471553, 0.12294630851022159), (0.12294630851022159, 0.122953897740115), (0.122953897740115, 0.12304879845345584), (0.12304879845345584, 0.12314132520227372), (0.12314132520227372, 0.12353104932521664), (0.12353104932521664, 0.12380437121505028), (0.12380437121505028, 0.12397742885798602), (0.12397742885798602, 0.12489621433034226), (0.12489621433034226, 0.12518271726471308), (0.12518271726471308, 0.12530063532781943), (0.12530063532781943, 0.1254288723617134), (0.1254288723617134, 0.12569362376747129), (0.12569362376747129, 0.1257408690148325), (0.1257408690148325, 0.12638296994012044), (0.12638296994012044, 0.12719952388005518), (0.12719952388005518, 0.1275248296461191), (0.1275248296461191, 0.12761079454614732), (0.12761079454614732, 0.12802771009024627), (0.12802771009024627, 0.1293262564179234), (0.1293262564179234, 0.1300202036555449), (0.1300202036555449, 0.13015938987247733), (0.13015938987247733, 0.1306965626323977), (0.1306965626323977, 0.13078553276483595), (0.13078553276483595, 0.1324490223795569), (0.1324490223795569, 0.13267234284453244), (0.13267234284453244, 0.13335553068237704), (0.13335553068237704, 0.13391280184954013), (0.13391280184954013, 0.13406019432588878), (0.13406019432588878, 0.1341578079453265), (0.1341578079453265, 0.1344715582321323), (0.1344715582321323, 0.13531221287343254), (0.13531221287343254, 0.1354683021834071), (0.1354683021834071, 0.13600676005036338), (0.13600676005036338, 0.137230928731223), (0.137230928731223, 0.1393922539046526), (0.1393922539046526, 0.1394467086603668), (0.1394467086603668, 0.14007848772259224), (0.14007848772259224, 0.14020917364214003), (0.14020917364214003, 0.14060377617858988), (0.14060377617858988, 0.14133442840660915), (0.14133442840660915, 0.14147461236599201), (0.14147461236599201, 0.14206707275864172), (0.14206707275864172, 0.14213197993200977), (0.14213197993200977, 0.14246412667846786), (0.14246412667846786, 0.14268706305641188), (0.14268706305641188, 0.14294870662560366), (0.14294870662560366, 0.14333167260813728), (0.14333167260813728, 0.14342237043589656), (0.14342237043589656, 0.14487170595936671), (0.14487170595936671, 0.14535956852041854), (0.14535956852041854, 0.14658414791916585), (0.14658414791916585, 0.14751107047997358), (0.14751107047997358, 0.14761143198672388), (0.14761143198672388, 0.1489803139426158), (0.1489803139426158, 0.1502711464845865), (0.1502711464845865, 0.1503540481247938), (0.1503540481247938, 0.15204298597675114), (0.15204298597675114, 0.15309088404154836), (0.15309088404154836, 0.15395281114165305), (0.15395281114165305, 0.15413508563709266), (0.15413508563709266, 0.15415434391063498), (0.15415434391063498, 0.15632685096966203), (0.15632685096966203, 0.15649829762080958), (0.15649829762080958, 0.15656471996161425), (0.15656471996161425, 0.15733867978459282), (0.15733867978459282, 0.15834198245843534), (0.15834198245843534, 0.15857033609626292), (0.15857033609626292, 0.1587090944005225), (0.1587090944005225, 0.15985193332190684), (0.15985193332190684, 0.16010979270419812), (0.16010979270419812, 0.16039943791824562), (0.16039943791824562, 0.1613100621236203), (0.1613100621236203, 0.1622696044178018), (0.1622696044178018, 0.16257979139884626), (0.16257979139884626, 0.16290466568635953), (0.16290466568635953, 0.1640497881509777), (0.1640497881509777, 0.16606614529255714), (0.16606614529255714, 0.16638659792231758), (0.16638659792231758, 0.16645019089776691), (0.16645019089776691, 0.16678951417833487), (0.16678951417833487, 0.1668133490444319), (0.1668133490444319, 0.16762332292628268), (0.16762332292628268, 0.16818894934679984), (0.16818894934679984, 0.1683676409068091), (0.1683676409068091, 0.16952924020572957), (0.16952924020572957, 0.17048672205182802), (0.17048672205182802, 0.17226896623308696), (0.17226896623308696, 0.17318794862911058), (0.17318794862911058, 0.17364600343428127), (0.17364600343428127, 0.1742979593695213), (0.1742979593695213, 0.17463996792168257), (0.17463996792168257, 0.17500869226044435), (0.17500869226044435, 0.1776786733084057), (0.1776786733084057, 0.17774841828780175), (0.17774841828780175, 0.17917109159980282), (0.17917109159980282, 0.18048814431515914), (0.18048814431515914, 0.1807328259545713), (0.1807328259545713, 0.18117804416338612), (0.18117804416338612, 0.18231091009475464), (0.18231091009475464, 0.18322787034251653), (0.18322787034251653, 0.18327394383164508), (0.18327394383164508, 0.18596759636991167), (0.18596759636991167, 0.18744000094714708), (0.18744000094714708, 0.18877957753884234), (0.18877957753884234, 0.19144704842462668), (0.19144704842462668, 0.19418677445198407), (0.19418677445198407, 0.19634945093519351), (0.19634945093519351, 0.19742815550541293), (0.19742815550541293, 0.19966622650681365), (0.19966622650681365, 0.20240595253417148), (0.20240595253417148, 0.2051456785615291), (0.2051456785615291, 0.20579320616170338), (0.20579320616170338, 0.20772411247218803), (0.20772411247218803, 0.2102611536604), (0.2102611536604, 0.21122873856185476), (0.21122873856185476, 0.21311766487275619), (0.21311766487275619, 0.2162508702766175), (0.2162508702766175, 0.21991893816372077), (0.21991893816372077, 0.2199505403694706), (0.2199505403694706, 0.22025981760438462), (0.22025981760438462, 0.2205905317810133), (0.2205905317810133, 0.22093980198249707), (0.22093980198249707, 0.22323605593675677), (0.22323605593675677, 0.22441329523691067), (0.22441329523691067, 0.22706348678082078), (0.22706348678082078, 0.2298032128081795), (0.2298032128081795, 0.23254293883557775), (0.23254293883557775, 0.2329528776643386), (0.2329528776643386, 0.233741434832478), (0.233741434832478, 0.23409080727049014), (0.23409080727049014, 0.2352826648629367), (0.2352826648629367, 0.23659740360647352), (0.23659740360647352, 0.2367503185439095), (0.2367503185439095, 0.23802239089029542), (0.23802239089029542, 0.23816815522249168), (0.23816815522249168, 0.23850961237634705), (0.23850961237634705, 0.24076211691765437), (0.24076211691765437, 0.2435018429450131), (0.2435018429450131, 0.2461492420366478), (0.2461492420366478, 0.24624156897237204), (0.24624156897237204, 0.2484948203399151), (0.2484948203399151, 0.24898129500031607), (0.24898129500031607, 0.24945452114402267), (0.24945452114402267, 0.25108362859919575), (0.25108362859919575, 0.2517210210276719), (0.2517210210276719, 0.2535151725935758), (0.2535151725935758, 0.25446074705502797), (0.25446074705502797, 0.2572004730823838), (0.2572004730823838, 0.25961200572840637), (0.25961200572840637, 0.2599401991097401), (0.2599401991097401, 0.2600035531732945), (0.2600035531732945, 0.2634616134409402), (0.2634616134409402, 0.2634756096773838), (0.2634756096773838, 0.26541965116489585), (0.26541965116489585, 0.2681593771922528), (0.2681593771922528, 0.2696948817591358), (0.2696948817591358, 0.2704721502671783), (0.2704721502671783, 0.27089910321960975), (0.27089910321960975, 0.2721169104905734), (0.2721169104905734, 0.2736388292469669), (0.2736388292469669, 0.27619705332544675), (0.27619705332544675, 0.27637855527432365), (0.27637855527432365, 0.2781260110157271), (0.2781260110157271, 0.2803848468414536), (0.2803848468414536, 0.28328860257254584), (0.28328860257254584, 0.2849853305066372), (0.2849853305066372, 0.2873374593838751), (0.2873374593838751, 0.28830444356514917), (0.28830444356514917, 0.28925971315809496), (0.28925971315809496, 0.2908079996730226), (0.2908079996730226, 0.29162955961510395), (0.29162955961510395, 0.29248452548973414), (0.29248452548973414, 0.293064876909934), (0.293064876909934, 0.2942647482629872), (0.2942647482629872, 0.29721860151692403), (0.29721860151692403, 0.29858096843646464), (0.29858096843646464, 0.30030239141467185), (0.30030239141467185, 0.30377581554806077), (0.30377581554806077, 0.3051830785450047), (0.3051830785450047, 0.30589248544420955), (0.30589248544420955, 0.3092552676028175), (0.3092552676028175, 0.30943146385276465), (0.30943146385276465, 0.31007813860633027), (0.31007813860633027, 0.3103213437013843), (0.3103213437013843, 0.31199499363017513), (0.31199499363017513, 0.3139451233902233), (0.3139451233902233, 0.3147347196575325), (0.3147347196575325, 0.31551713531606773), (0.31551713531606773, 0.31593307470256327), (0.31593307470256327, 0.3161144191949703), (0.3161144191949703, 0.31637480773635307), (0.31637480773635307, 0.3184830108997343), (0.3184830108997343, 0.31882181552644084), (0.31882181552644084, 0.3203716319178269), (0.3203716319178269, 0.32268357359291366), (0.32268357359291366, 0.3247176400537384), (0.3247176400537384, 0.3256936237670902), (0.3256936237670902, 0.32680575980418647), (0.32680575980418647, 0.327126529659977), (0.327126529659977, 0.32843334979444805), (0.32843334979444805, 0.3303421627113359), (0.3303421627113359, 0.3311730758218061), (0.3311730758218061, 0.33139999233422035), (0.33139999233422035, 0.3339128018491637), (0.3339128018491637, 0.33665252787652156), (0.33665252787652156, 0.3393922539038794), (0.3393922539038794, 0.34213197993171285), (0.34213197993171285, 0.3448717059590718), (0.3448717059590718, 0.34761143198643096), (0.34761143198643096, 0.35035115801379013), (0.35035115801379013, 0.3530908840411491), (0.3530908840411491, 0.3558306100689692), (0.3558306100689692, 0.3559437338698086), (0.3559437338698086, 0.36131006212368044), (0.36131006212368044, 0.36404978815103606), (0.36404978815103606, 0.3667895141783917), (0.3667895141783917, 0.36952924020574707), (0.36952924020574707, 0.3722689662331473), (0.3722689662331473, 0.37500869226050315), (0.37500869226050315, 0.37774841828785855), (0.37774841828785855, 0.38048814431521416), (0.38048814431521416, 0.3832278703425698), (0.3832278703425698, 0.3859675963699254)]
    
    obs_BL_pre = [obs_tips, obs_max_H, obs_min_H, obs_mean_lengths, obs_median_lengths, obs_var_lengths, obs_mean_external, obs_median_external, obs_var_external, obs_mean_internal, obs_median_internal, obs_var_internal, obs_mean_ratio, obs_median_ratio, obs_var_ratio]

    obs_top_pre = [obs_tips, obs_colless, obs_sackin, obs_WD_ratio, obs_delta_W, obs_max_ladder, obs_IL_nodes, obs_staircase_1, obs_staircase_2]

    obs_LTT_pre = [max_L, t_max_L, slope_1, slope_2, slope_ratio, mean_s_time, mean_b_time]
    
  
    obs_BL = normalise(obs_BL_pre)
    obs_top = normalise(obs_top_pre)
    obs_LTT = normalise(obs_LTT_pre)
    obs_LTT_points = normalise(obs_LTT_points_pre)
    
    return obs_BL, obs_top, obs_LTT, obs_LTT_points, LTT_bins, obs_tips, observed_dist, observed_ch


def compare_BL(obs_vectors, coalescent_tree):
    
    sim_BL_pre = BL.calculate_branch_statistics(coalescent_tree)
    sim_BL = normalise(sim_BL_pre)
        
    obs_BL = obs_vectors[0]
    
    branch_difference = np.linalg.norm(obs_BL - sim_BL)
    
    return branch_difference

def compare_topology(obs_vectors, coalescent_tree):
    
    sim_top_pre = TOP.calculate_topology_params(coalescent_tree)
    sim_top = normalise(sim_top_pre)
    
    obs_top = obs_vectors[1]
    
    topology_difference = np.linalg.norm(obs_top - sim_top)
    
    return topology_difference


def compare_LTT_stats(obs_vectors, coalescent_tree):
    
    sim_LTT_pre = LTT.calculate_LTT_metrics(coalescent_tree.lineages_through_time)
    sim_LTT = normalise(sim_LTT_pre)
    
    obs_LTT = obs_vectors[2]
    
    LTT_stat_difference = np.linalg.norm(obs_LTT - sim_LTT)
    
    return LTT_stat_difference


def compare_LTT_points(obs_vectors, coalescent_tree):
    
    LTT_bins = obs_vectors[4]
    
    sim_LTT_points_pre = LTT.bin_sim(coalescent_tree.lineages_through_time, LTT_bins)
        
    sim_LTT_points = normalise(sim_LTT_points_pre)
    
    obs_LTT_points = obs_vectors[3]
    
    if len(obs_LTT_points) == len(sim_LTT_points):
        LTT_point_difference = np.linalg.norm(obs_LTT_points - sim_LTT_points)
    
        return LTT_point_difference
    else:
        return
    
def get_tip_difference(obs_vectors, coalescent_tree):
    
    obs_tips = obs_vectors[5]
    sim_tips = len(coalescent_tree.tips)
    
    tip_difference = abs(obs_tips - sim_tips)
    
    return tip_difference
    









    


